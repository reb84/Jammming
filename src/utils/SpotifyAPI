export const searchTracks = async (searchQuery, token) => {
  if (searchQuery.trim() === "") {
    return [];
  }

  try {
    const response = await fetch(
      `https://api.spotify.com/v1/search?type=track&q=${encodeURIComponent(
        searchQuery
      )}&limit=20`,
      {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    );

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();

    // Transform Spotify's response to match your component's expected format
    return data.tracks.items.map((track) => ({
      id: track.id,
      name: track.name,
      artist: track.artists[0].name,
      album: track.album.name,
      uri: track.uri,
      preview_url: track.preview_url,
      image: track.album.images[0]?.url || null,
      duration_ms: track.duration_ms,
    }));
  } catch (error) {
    console.error("Error searching tracks:", error);
    return [];
  }
};
